//DestList Header
typedef enum <uint> {
    Windows7or8 = 0x01,
    Windows10 = 0x04
} Version;

typedef struct{
    Version version;
    uint TotalNumberOfCurrentEntries;
    uint TotalNumberOfPinnedEntries;
    uint UnkownValue;
    uint64 LastIssuedEntryIDNumber;
    if(header.version==0x04){
        FSeek(24);
        uint64 NumberOfAddorDeleteorReOpenActions;
    }
    else if(header.version == 0x01){
        FSeek(24);
        uint64 NumberOfAddorDeleteActions;
    }
} FileHeader;

typedef struct{
    uint64 Checksum;
    ubyte NewVolumeID[16];
    ubyte NewObjectID[16];
    ubyte BirthVolumeID[16];
    ubyte BirthObjectID[16];
    ubyte NetBIOS[16];
    uint64 EntryIDNumber;
    uint Unknown;
    FILETIME MSFILETIME;
    uint Pin;
    short LengthOfUnicode;
    wchar_t EntryStringData[LengthOfUnicode];
} Win7or8_FileInfomation <optimize=true>;

typedef struct{
    uint64 Checksum;
    ubyte NewVolumeID[16];
    ubyte NewObjectID[16];
    ubyte BirthVolumeID[16];
    ubyte BirthObjectID[16];
    ubyte NetBIOS[16];
    uint EntryIDNumber;
    uint64 Unknown;
    FILETIME MSFILETIME;
    uint Pin;
    uint Unknown;
    float AcessCount;
    uint64 Unknown;
    short LengthOfUnicode;
    wchar_t EntryStringData[LengthOfUnicode];
} Win10_FileInfomation <optimize=true>;


//Destlist Main
//FileHeader header;

while(!FEof()){
    if((ReadUInt(FTell())==0x04) && (FSeek(136)+ReadUInt(FTell())==0xFFFFFFFF)){
        FileHeader header;
        Win10_FileInfomation FileInfo;
    }
    else if((ReadUInt(FTell())==0x01) && (FSeek(136)+ReadUInt(FTell())==0xFFFFFFFF)){
        FileHeader header;
        Win7or8_FileInfomation FileInfo;
    }
    else
        FSeek(FTell()+1);
}

//if((ReadUInt(FTell())==0x04) && (FSeek(140)+ReadUInt(FTell())==0xFFFFFFFF)){
//    FSeek(0);
//    FileHeader header;
//    Win10_FileInfomation FileInfo;
//}
//else if((ReadUInt(FTell())==0x04) && (FSeek(136),ReadUInt(FTell())==0xFFFFFFFF)){
//    FileHeader header;
//    Win7or8_FileInfomation FileInfo;
//}
